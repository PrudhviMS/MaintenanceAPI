# Generated by Django 2.1 on 2019-07-30 09:05

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Assets',
            fields=[
                ('asset_id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('asset_name', models.CharField(max_length=100)),
                ('asset_model', models.CharField(blank=True, max_length=100, null=True)),
                ('asset_inst_date', models.DateField()),
                ('asset_remove_date', models.DateField(blank=True, null=True)),
                ('cost', models.DecimalField(decimal_places=4, max_digits=14)),
                ('warranty_period', models.DateField(blank=True, null=True)),
                ('service_interval', models.IntegerField(blank=True, null=True)),
                ('last_service', models.DateTimeField(blank=True, null=True)),
                ('media_attachments', models.FileField(default='', upload_to='')),
                ('invoice_attachments', models.FileField(default='', upload_to='')),
                ('barcode', models.BigIntegerField()),
                ('status', models.BooleanField(choices=[(True, 'Active'), (False, 'Inactive')], default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'db_table': 'assets',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='AssetType',
            fields=[
                ('asset_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('asset_type_name', models.CharField(max_length=50, unique=True)),
                ('status', models.BooleanField(choices=[(True, 'Active'), (False, 'Inactive')], default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'db_table': 'asset_type',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Distributor',
            fields=[
                ('distributor_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=50, unique=True)),
                ('mobile', models.CharField(max_length=10, unique=True, validators=[django.core.validators.RegexValidator(code='nomatch', message='Length has to be 10', regex='^.{10}$')])),
                ('status', models.BooleanField(choices=[(True, 'Active'), (False, 'Inactive')], default=True)),
                ('attachments', models.FileField(default='', upload_to='')),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'db_table': 'distributor',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Payments',
            fields=[
                ('payment_id', models.AutoField(primary_key=True, serialize=False)),
                ('cost', models.FloatField()),
                ('billno', models.BigIntegerField()),
                ('invoiceid', models.BigIntegerField(blank=True, null=True)),
                ('attachments', models.FileField(default='', upload_to='')),
                ('status', models.BooleanField(choices=[(True, 'Active'), (False, 'Inactive')], default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True, null=True)),
                ('asset_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.Assets')),
            ],
            options={
                'db_table': 'payments',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PaymentType',
            fields=[
                ('payment_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('payment_type_name', models.CharField(max_length=100)),
                ('status', models.BooleanField(choices=[(True, 'Active'), (False, 'Inactive')], default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'db_table': 'payment_type',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Priorities',
            fields=[
                ('priority_id', models.AutoField(primary_key=True, serialize=False)),
                ('priority_name', models.CharField(max_length=100)),
                ('hours', models.IntegerField(blank=True, null=True)),
                ('status', models.BooleanField(choices=[(True, 'Active'), (False, 'Inactive')], default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'db_table': 'priorities',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Rolemapping',
            fields=[
                ('rolemapping_id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.BooleanField(choices=[(True, 'Active'), (False, 'Inactive')], default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'db_table': 'rolemapping',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('role_id', models.AutoField(primary_key=True, serialize=False)),
                ('role_name', models.CharField(max_length=30, unique=True)),
                ('status', models.BooleanField(choices=[(True, 'Active'), (False, 'Inactive')], default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'db_table': 'roles',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('supplier_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('email', models.CharField(max_length=50)),
                ('mobile', models.CharField(max_length=10, unique=True, validators=[django.core.validators.RegexValidator(code='nomatch', message='Length has to be 10', regex='^.{10}$')])),
                ('status', models.BooleanField(choices=[(True, 'Active'), (False, 'Inactive')], default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'db_table': 'supplier',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Tickets',
            fields=[
                ('ticket_id', models.AutoField(primary_key=True, serialize=False)),
                ('location', models.CharField(blank=True, max_length=250, null=True)),
                ('description', models.CharField(blank=True, max_length=250, null=True)),
                ('attachments', models.FileField(default='', upload_to='')),
                ('status', models.BooleanField(choices=[(True, 'Active'), (False, 'Inactive')], default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True, null=True)),
                ('asset_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.Assets')),
            ],
            options={
                'db_table': 'tickets',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TicketStatus',
            fields=[
                ('ticket_status_id', models.AutoField(primary_key=True, serialize=False)),
                ('ticket_status_name', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.BooleanField(choices=[(True, 'Active'), (False, 'Inactive')], default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'db_table': 'ticket_status',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=50, unique=True)),
                ('mobile', models.CharField(max_length=10, unique=True, validators=[django.core.validators.RegexValidator(code='nomatch', message='Length has to be 10', regex='^.{10}$')])),
                ('password', models.CharField(max_length=30)),
                ('cnfpassword', models.CharField(max_length=30)),
                ('status', models.BooleanField(choices=[(True, 'Active'), (False, 'Inactive')], default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='users_created', to='api.Users')),
                ('role_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.Roles')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='users_updated', to='api.Users')),
            ],
            options={
                'db_table': 'users',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='ticketstatus',
            name='created_by',
            field=models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ticketstatus_created', to='api.Users'),
        ),
        migrations.AddField(
            model_name='ticketstatus',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ticketstatus_updated', to='api.Users'),
        ),
        migrations.AddField(
            model_name='tickets',
            name='created_by',
            field=models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='tickets_created', to='api.Users'),
        ),
        migrations.AddField(
            model_name='tickets',
            name='priority',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.Priorities'),
        ),
        migrations.AddField(
            model_name='tickets',
            name='ticket_status',
            field=models.ForeignKey(blank=True, db_column='ticket_status', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.TicketStatus'),
        ),
        migrations.AddField(
            model_name='tickets',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='tickets_updated', to='api.Users'),
        ),
        migrations.AddField(
            model_name='tickets',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.Users'),
        ),
        migrations.AddField(
            model_name='supplier',
            name='created_by',
            field=models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='supplier_created', to='api.Users'),
        ),
        migrations.AddField(
            model_name='supplier',
            name='distributor_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.Distributor'),
        ),
        migrations.AddField(
            model_name='supplier',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='supplier_updated', to='api.Users'),
        ),
        migrations.AddField(
            model_name='roles',
            name='created_by',
            field=models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='roles_created', to='api.Users'),
        ),
        migrations.AddField(
            model_name='roles',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='roles_updated', to='api.Users'),
        ),
        migrations.AddField(
            model_name='rolemapping',
            name='created_by',
            field=models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='rolemapping_created', to='api.Users'),
        ),
        migrations.AddField(
            model_name='rolemapping',
            name='role_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.Roles'),
        ),
        migrations.AddField(
            model_name='rolemapping',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='rolemapping_updated', to='api.Users'),
        ),
        migrations.AddField(
            model_name='rolemapping',
            name='user_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.Users'),
        ),
        migrations.AddField(
            model_name='priorities',
            name='created_by',
            field=models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='priorities_created', to='api.Users'),
        ),
        migrations.AddField(
            model_name='priorities',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='priorities_updated', to='api.Users'),
        ),
        migrations.AddField(
            model_name='paymenttype',
            name='created_by',
            field=models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='paymenttype_created', to='api.Users'),
        ),
        migrations.AddField(
            model_name='paymenttype',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='paymenttype_updated', to='api.Users'),
        ),
        migrations.AddField(
            model_name='payments',
            name='created_by',
            field=models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='payments_created', to='api.Users'),
        ),
        migrations.AddField(
            model_name='payments',
            name='payment_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.PaymentType'),
        ),
        migrations.AddField(
            model_name='payments',
            name='ticket',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.Tickets'),
        ),
        migrations.AddField(
            model_name='payments',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='payments_updated', to='api.Users'),
        ),
        migrations.AddField(
            model_name='payments',
            name='vendor_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.Users'),
        ),
        migrations.AddField(
            model_name='distributor',
            name='created_by',
            field=models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='distributor_created', to='api.Users'),
        ),
        migrations.AddField(
            model_name='distributor',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='distributor_updated', to='api.Users'),
        ),
        migrations.AddField(
            model_name='assettype',
            name='created_by',
            field=models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='assettype_created', to='api.Users'),
        ),
        migrations.AddField(
            model_name='assettype',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='assettype_updated', to='api.Users'),
        ),
        migrations.AddField(
            model_name='assets',
            name='asset_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.AssetType'),
        ),
        migrations.AddField(
            model_name='assets',
            name='created_by',
            field=models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='assets_created', to='api.Users'),
        ),
        migrations.AddField(
            model_name='assets',
            name='distributor_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.Distributor'),
        ),
        migrations.AddField(
            model_name='assets',
            name='supplier_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.Supplier'),
        ),
        migrations.AddField(
            model_name='assets',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='assets_updated', to='api.Users'),
        ),
    ]
